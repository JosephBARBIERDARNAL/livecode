% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/file_stream_server.R
\name{lc_server_iface}
\alias{lc_server_iface}
\title{livecode server interface}
\description{
This is a high level, user facing interface class that allows
for the creation of a livecode server sharing a specific file.
The interface also provides additional tools for sending messages.
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{url}}{The current url of the server.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{lc_server_iface$new()}}
\item \href{#method-print}{\code{lc_server_iface$print()}}
\item \href{#method-send_msg}{\code{lc_server_iface$send_msg()}}
\item \href{#method-send_timer}{\code{lc_server_iface$send_timer()}}
\item \href{#method-is_running}{\code{lc_server_iface$is_running()}}
\item \href{#method-stop}{\code{lc_server_iface$stop()}}
\item \href{#method-restart}{\code{lc_server_iface$restart()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Creates a new livecode server
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{lc_server_iface$new(
  file,
  ip,
  port,
  interval = 2,
  template = "prism",
  bitly = FALSE,
  auto_save = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file}}{Path to file to broadcast.}

\item{\code{ip}}{ip of the server, defaults to the top result of `get_interfaces`.}

\item{\code{port}}{port of the server, defaults to a random value.}

\item{\code{interval}}{page update interval in seconds.}

\item{\code{template}}{page template to use.}

\item{\code{bitly}}{should a bitly bit link be created for the server.}

\item{\code{auto_save}}{should the broadcast file be auto saved update tic.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\subsection{Method \code{print()}}{
Class print method
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{lc_server_iface$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-send_msg"></a>}}
\subsection{Method \code{send_msg()}}{
Send a noty message to all connected users on the next update tic.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{lc_server_iface$send_msg(
  text,
  timeout = 0,
  type = "alert",
  theme = "semanticui"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{text}}{text of the message.}

\item{\code{timeout}}{how long should the message stay on screen in seconds.}

\item{\code{type}}{message type (`alert`, `success`, `warning`, `error`, `info`).}

\item{\code{theme}}{message theme (See [here](https://ned.im/noty/#/themes) for options)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-send_timer"></a>}}
\subsection{Method \code{send_timer()}}{
Send a noty message with a built in countdown timer on the next update tic.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{lc_server_iface$send_timer(
  text,
  timeout = 30,
  type = "error",
  theme = "semanticui"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{text}}{text of the message.}

\item{\code{timeout}}{how long should the countdown timer take in seconds.}

\item{\code{type}}{message type (`alert`, `success`, `warning`, `error`, `info`).}

\item{\code{theme}}{message theme (See [here](https://ned.im/noty/#/themes) for options)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-is_running"></a>}}
\subsection{Method \code{is_running()}}{
Determine if the server is running.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{lc_server_iface$is_running()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns `TRUE` if the server is running.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-stop"></a>}}
\subsection{Method \code{stop()}}{
Stop the server
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{lc_server_iface$stop(warn = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{warn}}{Should the users be sent a warning that the server is shutting down.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-restart"></a>}}
\subsection{Method \code{restart()}}{
Restart the server
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{lc_server_iface$restart()}\if{html}{\out{</div>}}
}

}
}
